name: Autograding Tests
'on': {}
permissions:
  checks: write
  actions: read
  contents: read

jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: pip install pytest bs4 cssutils pytest-json-report

    - name: Run pytest
      id: pytest-run
      continue-on-error: true
      run: |
        pytest --tb=short --disable-warnings --json-report --json-report-file=results.json || true
        echo "PYTEST_EXIT_CODE=$?" >> $GITHUB_ENV

    - name: Process results for autograding
      id: process-results
      run: |
        import json
        import os

        total_score = 0
        max_score = 40

        try:
            with open("results.json") as f:
                data = json.load(f)

            if isinstance(data, list):
                for test in data:
                    if test.get("status") == "passed":
                        total_score += test.get("points", 0)

            total_score = min(total_score, max_score)

        except (FileNotFoundError, json.JSONDecodeError):
            print("No valid results.json found, setting score to 0.")

        print(f"Final Score: {total_score}/{max_score}")

        with open(os.getenv('GITHUB_ENV'), 'a') as f:
            f.write(f"TOTAL_SCORE={total_score}\n")

      shell: python

    - name: Autograding Reporter
      uses: classroom-resources/autograding-grading-reporter@v1
      env:
        TOTAL_SCORE: "${{ env.TOTAL_SCORE }}"
      with:
        runners: pytest-run

    - name: Ensure success
      if: always()
      run: exit 0
