name: Autograding Tests
'on': {}
permissions:
  checks: write
  actions: read
  contents: read

jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: pip install pytest bs4 cssutils pytest-json-report pytest-custom_exit_code

      - name: Run pytest
        id: pytest-run
        continue-on-error: true
        run: |
          # A pytest futtatása, a hibakódokat elnyelve az || true miatt
          pytest --tb=short --disable-warnings --json-report --json-report-file=results.json --suppress-tests-failed-exit-code || true
          echo "PYTEST_EXIT_CODE=$?" >> $GITHUB_ENV

      - name: Process results for autograding
        id: process-results
        continue-on-error: true
        shell: python
        run: |
          import json
          import os

          total_score = 0
          max_score = 40

          try:
              # JSON fájl beolvasása
              with open("results.json") as f:
                  data = json.load(f)

              # A sikeresen teljesített tesztek pontjainak összeadása
              if isinstance(data, list):
                  for test in data:
                      if test.get("status") == "passed":
                          total_score += test.get("points", 0)

              # Az összpontszám nem haladhatja meg a maximumot
              total_score = min(total_score, max_score)

          except (FileNotFoundError, json.JSONDecodeError):
              print("No valid results.json found, setting score to 0.")

          print(f"Final Score: {total_score}/{max_score}")

          # Az összpontszám beállítása környezeti változóként
          with open(os.getenv('GITHUB_ENV'), 'a') as f:
              f.write(f"TOTAL_SCORE={total_score}\n")

      - name: Autograding Reporter
        id: reporter
        continue-on-error: true
        uses: classroom-resources/autograding-grading-reporter@v1
        env:
          TOTAL_SCORE: "${{ env.TOTAL_SCORE }}"
        with:
          runners: pytest-run

      - name: Ensure success
        if: always()
        run: echo "Completed autograding, exiting with code 0." && exit 0
